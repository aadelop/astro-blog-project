---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

export async function getStaticPaths() {
    const allPosts = await Astro.glob('../posts/*.md');
    /* 
        Notas sobre variable uniqueTags
        -Primero   el operador '...' (spread operator) se encarga de copiar en este  array el contenido de la nueva estructura'Set' 
        -La estrcutura nueva Set se encarga de recibir elementos unicos e irrepetibles sobre allPost
        -El arreglo allPost es procesada por la funciona 'map' que se encarga de obtener todos los tags de todos los posts de la web
        -Finlamente se utiliza la funcion 'flat' para aplanar el arreglo ya que es probable que se generen arreglos anidados
    */

    const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];
    console.log("All posts");
    console.log(allPosts[0].frontmatter);
    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
  }); 
}
const { posts } = Astro.props;
const { tag } = Astro.params;

---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)} 
  </ul>
</BaseLayout>